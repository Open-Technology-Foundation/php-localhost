#!/bin/bash
set -eEuo pipefail +o histexpand
shopt -s extglob globstar checkwinsize #-u dotglob nullglob
declare -- COLUMNS
COLUMNS=$(tput cols)

#echo -n ' ' # update COLUMNS
#echo $COLUMNS

(($#)) && {
  [[ "$*" == *"-h"* || "$*" == *"--help"* ]] && {
    echo "Usage: $(basename "$0") [--help|-h]"
    echo "Description:"
    echo "  Interactive manager for PHP localhost servers"
    echo "  - Lists all running PHP server instances (both standalone and screen sessions)"
    echo "  - Allows selecting servers by PID"
    echo "  - Provides options to kill servers or attach to screen sessions"
    echo "  - Auto-refreshes the server list"
    echo ""
    echo "Options:"
    echo "  -h, --help    Display this help message"
    exit 0
  }
}

printline() { eval printf '%.0s-' {1..${COLUMNS:-64}}; echo; }

echo "Active PHP Localhosts"
while((1)); do
  readarray -t TT < <(ps -aeF |grep 'php .*localhost:[0-9]* ' |tr -s ' ' |cut -d' ' -f2,11- |sort -n)
  ((${#TT[@]})) || { >&2 echo "$(basename "$0"): No PHP localhosts found"; exit 1; }
  PS3=$'\n''Select PHP localhost PID: '
  printline
  echo '0) quit'
  select screen_id in "${TT[@]}"; do
    [[ 0q == *"${REPLY:0:1}"* || $screen_id == quit ]] && break 2
    [[ -z $screen_id ]] && continue 2

    while ((1)); do
      printline
      echo -e "Target: $screen_id\n"
      pid=${screen_id%% *}
      OPS=(remove)
      [[ $screen_id == *"SCREEN"* ]] && OPS+=(open)
      PS3=$'\n''Operation: '
      echo '0) back'
      select op in "${OPS[@]}"; do
        [[ 0qb == *"${REPLY:0:1}"* || $op == back ]] && break 3
        [[ -z $op ]] && continue 2
        case "$op" in
          remove)   if [[ $screen_id == *"SCREEN"* ]]; then
                      screen -X -S "$pid" quit
                    else
                      kill -9 "$pid"
                    fi
                    break 3 ;;
          open)     screen -r "$pid"
                    continue 2 ;;
          *)        continue 2;;
        esac
      done
    done
    PS3="Select screen ID: "
  done
done

#fin
